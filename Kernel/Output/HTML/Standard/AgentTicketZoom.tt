# --
# AgentTicketZoom.tt - provides HTML for AgentTicketZoom.pm
# Copyright (C) 2001-2014 OTRS AG, http://otrs.com/
# --
# This software comes with ABSOLUTELY NO WARRANTY. For details, see
# the enclosed file COPYING for license information (AGPL). If you
# did not receive this file, see http://www.gnu.org/licenses/agpl.txt.
# --

[% RenderBlockStart("ArticleFilterDialog") %]
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
    $('#SetArticleFilter').bind('click', function (Event) {
        Core.UI.Dialog.ShowContentDialog($('#ArticleFilterDialog'), [% Translate("Article filter") | JSON %], '20px', 'Center', true, [
            {
                Label: [% Translate("Apply") | JSON %],
                Function: function () {
                    var Data = Core.AJAX.SerializeForm($('#ArticleFilterDialogForm'));
                    Core.AJAX.FunctionCall(Core.Config.Get('CGIHandle'), Data, function () {
                        location.reload();
                    }, 'text');
                }
            },
            {
                Label: [% Translate("Reset") | JSON %],
                Function: function () {
                    $('#ArticleTypeFilter').val('');
                    $('#ArticleSenderTypeFilter').val('');
                }
            }
        ]);
        return false;
    });
    $('#ResetArticleFilter').bind('click', function (Event) {
        var Data = {
            Action:       'AgentTicketZoom',
            Subaction:    'ArticleFilterSet',
            TicketID:     "[% Data.TicketID | html %]",
            SaveDefaults: 1
        };
        Core.AJAX.FunctionCall(Core.Config.Get('CGIHandle'), Data, function () {
            location.reload();
        });
    });
//]]></script>
[% END %]
<div id="ArticleFilterDialog" class="Hidden">
    <form action="[% Env("CGIHandle") %]" method="post" id="ArticleFilterDialogForm" name="ArticleFilterDialogForm">
        <input type="hidden" value="AgentTicketZoom" name="Action"/>
        <input type="hidden" value="ArticleFilterSet" name="Subaction"/>
        <input type="hidden" value="[% Data.TicketID | html %]" name="TicketID"/>
        <fieldset class="TableLike">
            <label for="ArticleTypeFilter">[% Translate("Article Type") | html %]:</label>
            <div class="Field">
                [% Data.ArticleTypeFilterString %]
            </div>
            <div class="Clear"></div>
            <label for="ArticleSenderTypeFilter">[% Translate("Sender Type") | html %]:</label>
            <div class="Field">
                [% Data.ArticleSenderTypeFilterString %]
            </div>
            <div class="Clear"></div>
            <label for="SaveDefaults">[% Translate("Save filter settings as default") | html %]:</label>
            <div class="Field">
                <input type="checkbox" id="SaveDefaults" name="SaveDefaults" value="1" />
            </div>
        </fieldset>
    </form>
</div>
[% RenderBlockEnd("ArticleFilterDialog") %]

[% RenderBlockStart("Header") %]
<div class="MainBox ARIARoleMain">
    <div class="ClearLeft"></div>
    <div class="Headline">
        <div class="Flag" title="[% Translate(Data.Priority) | html %]"><span class="PriorityID-[% Data.PriorityID | html %]">[% Translate(Data.Priority) | html %]</span></div>
        <h1 title="[% Translate("Zoom") | html %] [% Data.Hook %][% Data.TicketNumber %] &ndash; [% Data.Title | html %]">
            [% Data.Hook %][% Data.TicketNumber %] <span>&mdash;</span> [% Data.Title | html %]
        </h1>
    </div>

# Iframe used for fixing bug#8545: Attachment download not possible if pop up of another action is open
# All downloads (e.g. attachments) have this iframe as target. This prevents the browser from sending
# an http request to the TicketZoom window. It sends the download request to this iframe instead.
# Sending the download request to the main window would lead to an alert message about leaving the page
# if at the same time a popup window (e.g. for a ticket answer) is opened.
    <iframe src="about:blank" width="0" height="0" name="AttachmentWindow" id="AttachmentWindow"></iframe>

    <div class="LayoutFixedSidebar SidebarLast">
        <div class="SidebarColumn">
            <div class="WidgetSimple">
                <div class="Header">
                    <h2>[% Translate(Data.WidgetTitle) | html %]</h2>
                </div>
                <div class="Content">
                    <fieldset class="TableLike FixedLabelSmall Narrow">
[% RenderBlockStart("ArchiveFlag") %]
                        <label>[% Translate("Archive") | html %]:</label>
                        <p class="Value">[% Translate("This ticket is archived.") | html %]</p>
                        <div class="Clear"></div>
[% RenderBlockEnd("ArchiveFlag") %]
[% RenderBlockStart("Type") %]
                        <label>[% Translate("Type") | html %]:</label>
                        <p class="Value" title="[% Data.Type | html %]">[% Data.Type | html %]</p>
                        <div class="Clear"></div>
[% RenderBlockEnd("Type") %]

                        <label>[% Translate("Age") | html %]:</label>
                        <p class="Value" title="[% Data.Age %]">[% Data.Age %]</p>
                        <div class="Clear"></div>

                        <label>[% Translate("Created") | html %]:</label>
                        <p class="Value" title="[% Data.Created | Localize("TimeShort") %]">[% Data.Created | Localize("TimeShort") %]</p>
                        <div class="Clear"></div>

[% RenderBlockStart("CreatedBy") %]
                        <label>[% Translate("Created by") | html %]:</label>
                        <p class="Value" title="[% Data.CreatedByUser %]">[% Data.CreatedByUser %]</p>
                        <div class="Clear"></div>
[% RenderBlockEnd("CreatedBy") %]

                        <label>[% Translate("State") | html %]:</label>
                        <p class="Value" title="[% Translate(Data.State) | html %]">[% Translate(Data.State) | html %]</p>
                        <div class="Clear"></div>

                        <label>[% Translate("Locked") | html %]:</label>
                        <p class="Value" title="[% Translate(Data.Lock) | html %]">[% Translate(Data.Lock) | html %]</p>
                        <div class="Clear"></div>

                        <label>[% Translate("Priority") | html %]:</label>
                        <p class="Value" title="[% Translate(Data.Priority) | html %]">[% Translate(Data.Priority) | html %]</p>
                        <div class="Clear"></div>

                        <label>[% Translate("Queue") | html %]:</label>
                        <p class="Value" title="[% Data.Queue | html %]">[% Data.QueueClickable | replace('::', '<wbr>::<wbr>') %]</p>
                        <div class="Clear"></div>

[% RenderBlockStart("Service") %]
                        <label>[% Translate("Service") | html %]:</label>
                        <p class="Value" title="[% Data.Service | html %]">[% Data.Service | html %]</p>
                        <div class="Clear"></div>
[% RenderBlockEnd("Service") %]
[% RenderBlockStart("SLA") %]
                        <label>[% Translate("Service Level Agreement") | html %]:</label>
                        <p class="Value" title="[% Data.SLA | html %]">[% Data.SLA | html %]</p>
                        <div class="Clear"></div>
[% RenderBlockEnd("SLA") %]
                    </fieldset>

                    <fieldset class="TableLike FixedLabelSmall Narrow">
[% RenderBlockStart("FirstResponseTime") %]
                        <label>[% Translate("First Response Time") | html %]:</label>
                        <div class="Value">
                            <p title="[% Translate("Service Time") | html %]: [% Data.FirstResponseTimeWorkingTime | html %]" class="[% Data.FirstResponseTimeClass | html %]">
                                [% Data.FirstResponseTimeHuman | html %]
                                <br/>
                                [% Data.FirstResponseTimeDestinationDate | Localize("TimeShort") %]
                            </p>
                        </div>
                        <div class="Clear"></div>
[% RenderBlockEnd("FirstResponseTime") %]
[% RenderBlockStart("UpdateTime") %]
                        <label>[% Translate("Update Time") | html %]:</label>
                        <div class="Value">
                            <p title="[% Translate("Service Time") | html %]: [% Data.UpdateTimeWorkingTime | html %]" class="[% Data.UpdateTimeClass | html %]">
                                [% Data.UpdateTimeHuman | html %]
                                <br/>
                                [% Data.UpdateTimeDestinationDate | Localize("TimeShort") %]
                            </p>
                        </div>
                        <div class="Clear"></div>
[% RenderBlockEnd("UpdateTime") %]
[% RenderBlockStart("SolutionTime") %]
                        <label>[% Translate("Solution Time") | html %]:</label>
                        <div class="Value">
                            <p title="[% Translate("Service Time") | html %]: [% Data.SolutionTimeWorkingTime | html %]" class="[% Data.SolutionTimeClass | html %]">
                                [% Data.SolutionTimeHuman | html %]
                                <br/>
                                [% Data.SolutionTimeDestinationDate | Localize("TimeShort") %]
                            </p>
                        </div>
                        <div class="Clear"></div>
[% RenderBlockEnd("SolutionTime") %]
                    </fieldset>

                    <fieldset class="TableLike FixedLabelSmall Narrow">
                        <label>[% Translate("CustomerID") | html %]:</label>
                        <p class="Value">
                            <a href="[% Config("CustomerDBLink") | Interpolate %]" class="[% Config("CustomerDBLinkClass") %]" [% Config("CustomerDBLinkTarget") %]>[% Data.CustomerID | html %]</a>
                        </p>
                        <div class="Clear"></div>
[% RenderBlockStart("TotalAccountedTime") %]
                        <label>[% Translate("Accounted time") | html %]:</label>
                        <p class="Value">[% Data.TicketTimeUnits %]</p>
                        <div class="Clear"></div>

[% RenderBlockEnd("TotalAccountedTime") %]
[% RenderBlockStart("PendingUntil") %]
                        <label>[% Translate("Pending till") | html %]:</label>
                        <p class="Value [% Data.PendingUntilClass | html %]">
                            [% Data.PendingUntil %]
                            <br/>
                            [% Data.UntilTimeHuman | Localize("TimeShort") %]
                        </p>
                        <div class="Clear"></div>
[% RenderBlockEnd("PendingUntil") %]
[% RenderBlockStart("Owner") %]
                        <label>[% Translate("Owner") | html %]:</label>
                        <p class="Value" title="[% Data.UserFullname | html %] [% Data.OutOfOfficeMessage | html %] ([% Data.UserLogin | html %])">[% Data.UserFullname | html %] [% Data.OutOfOfficeMessage | html %]</p>
                        <div class="Clear"></div>

[% RenderBlockEnd("Owner") %]
[% RenderBlockStart("Responsible") %]
                        <label>[% Translate("Responsible") | html %]:</label>
                        <p class="Value" title="[% Data.UserFullname | html %] [% Data.OutOfOfficeMessage | html %] ([% Data.UserLogin | html %])">[% Data.UserFullname | html %] [% Data.OutOfOfficeMessage | html %]</p>
                        <div class="Clear"></div>

[% RenderBlockEnd("Responsible") %]
                    </fieldset>

[% RenderBlockStart("ProcessData") %]
                    <fieldset class="TableLike FixedLabelSmall Narrow">

                        <label>[% Translate("Process") | html %]:</label>
                        <p class="Value" title="[% Data.Process | html %]">[% Data.Process | html %]</p>
                        <div class="Clear"></div>

                        <label>[% Translate("Activity") | html %]:</label>
                        <p class="Value" title="[% Translate(Data.Activity) | html %]">[% Translate(Data.Activity) | html %]</p>
                        <div class="Clear"></div>
                    </fieldset>
[% RenderBlockEnd("ProcessData") %]

# show ticket dynamic fields
                    <fieldset class="TableLike FixedLabelSmall Narrow">
[% RenderBlockStart("TicketDynamicField") %]
                        <label>[% Translate(Data.Label) | html %]:</label>
                        <p class="Value">
[% RenderBlockStart("TicketDynamicFieldLink") %]
                            <span title="[% Data.Title | html %]"><a href="[% Data.Link %]" target="_blank" class="DynamicFieldLink">[% Data.Value %]</a></span>
[% RenderBlockEnd("TicketDynamicFieldLink") %]
[% RenderBlockStart("TicketDynamicFieldPlain") %]
                            <span title="[% Data.Title | html %]">[% Data.Value %]</span>
[% RenderBlockEnd("TicketDynamicFieldPlain") %]
                        </p>
                        <div class="Clear"></div>
[% RenderBlockEnd("TicketDynamicField") %]
                    </fieldset>

# example of how to use fixed dynamic field blocks for customizations
# Note: Field1 and Field2 are the names of the fields and had to be replaced with the actual
# field names
#                    <fieldset class="TableLike FixedLabelSmall Narrow">
#[% RenderBlockStart("TicketDynamicField_Field1") %]
#                        <label>[% Translate(Data.Label) | html %]:</label>
#                        <p class="Value">
#[% RenderBlockStart("TicketDynamicField_Field1_Link") %]
#                            <span title="[% Data.Title | html %]"><a href="[% Data.Link %]" target="_blank">[% Data.Value %]</a></span>
#[% RenderBlockEnd("TicketDynamicField_Field1_Link") %]
#[% RenderBlockStart("TicketDynamicField_Field1_Plain") %]
#                            <span title="[% Data.Title | html %]">[% Data.Value %]</span>
#[% RenderBlockEnd("TicketDynamicField_Field1_Plain") %]
#                        </p>
#[% RenderBlockEnd("TicketDynamicField_Field1") %]
#                    </fieldset>
#                    <fieldset class="TableLike FixedLabelSmall Narrow">
#[% RenderBlockStart("TicketDynamicField_Field2") %]
#                        <label>[% Translate(Data.Label) | html %]:</label>
#                        <p class="Value">
#[% RenderBlockStart("TicketDynamicField_Field2_Link") %]
#                            <span title="[% Data.Title | html %]"><a href="[% Data.Link %]" target="_blank">[% Data.Value %]</a></span>
#[% RenderBlockEnd("TicketDynamicField_Field2_Link") %]
#[% RenderBlockStart("TicketDynamicField_Field2_Plain") %]
#                            <span title="[% Data.Title | html %]">[% Data.Value %]</span>
#[% RenderBlockEnd("TicketDynamicField_Field2_Plain") %]
#                        </p>
#[% RenderBlockEnd("TicketDynamicField_Field2") %]
#                    </fieldset>
                </div>
            </div>
# show customer info table
[% RenderBlockStart("CustomerTable") %]
            <div class="WidgetSimple">
                <div class="Header">
                    <h2>[% Translate("Customer Information") | html %]</h2>
                </div>
                <div class="Content">
                    [% Data.CustomerTable %]
                </div>
            </div>
[% RenderBlockEnd("CustomerTable") %]
[% RenderBlockStart("LinkTableSimple") %]
            <div class="WidgetSimple DontPrint">
                <div class="Header">
                    <h2>[% Translate("Linked Objects") | html %]</h2>
                </div>
                <div class="Content">
                    [% Data.LinkTableStrg %]
                </div>
            </div>
[% RenderBlockEnd("LinkTableSimple") %]
        </div>
        <div class="ContentColumn">

            <div class="WidgetSimple">
                <div class="Content">
                    <div class="ActionRow">
                        <ul class="Actions">
[% RenderBlockStart("TicketMenu") %]
                            <li>
                                <a href="[% Env("Baselink") %][% Data.Link | Interpolate %]" class="[% Data.Class | html %]" [% Data.LinkParam %] title="[% Translate(Data.Description) | html %]">[% Translate(Data.Name) | html %]</a>
                            </li>
[% RenderBlockEnd("TicketMenu") %]
[% RenderBlockStart("TicketMenuPhoneAsDropdown") %]
                            <li>
                                <form title="[% Translate(Data.Name) | html %]" action="[% Env("CGIHandle") %]" method="get" id="[% Data.FormID | html %]">
                                    <input type="hidden" name="Action" value="[% Data.Action | html %]"/>
                                    <input type="hidden" name="TicketID" value="[% Data.TicketID | html %]"/>
                                    <label for="[% Data.PhoneElementID | html %]" class="InvisibleText">[% Translate(Data.Name) | html %]:</label>
                                    [% Data.StandardReplyStrg %]
                                </form>
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
$('#[% Data.FormID | html %] select[name=[% Data.PhoneElementID | html %]]').bind('change', function (Event) {
    var URL;

    if ($(this).val() > 0) {
        URL = Core.Config.Get('Baselink') + $(this).parents().serialize();
        Core.UI.Popup.OpenPopup(URL, 'TicketAction');
        // reset the select box so that it can be used again from the same window
        $(this).val('0');
    }
});
//]]></script>
[% END %]
                            </li>
[% RenderBlockEnd("TicketMenuPhoneAsDropdown") %]
[% RenderBlockStart("MoveLink") %]
                            <li class="[% Data.Class | html %]">
                                <form title="[% Translate("Move ticket to a different queue") | html %]" action="[% Env("CGIHandle") %]" method="post">
                                    <input type="hidden" name="Action" value="AgentTicketMove"/>
                                    <input type="hidden" name="QueueID" value="[% Data.QueueID | html %]"/>
                                    <input type="hidden" name="TicketID" value="[% Data.TicketID | html %]"/>
                                    <label for="DestQueueID" class="InvisibleText">[% Translate("Queue") | html %]:</label>
                                    [% Data.MoveQueuesStrg %]
                                </form>
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
    $('#DestQueueID').bind('change', function (Event) {
        $(this).closest('form').submit();
    });
//]]></script>
[% END %]
                            </li>
[% RenderBlockEnd("MoveLink") %]
[% RenderBlockStart("MoveForm") %]
                            <li>
                                <a href="[% Env("Baselink") %]Action=AgentTicketMove;TicketID=[% Data.TicketID | uri %];" class="AsPopup PopupType_TicketAction" title="[% Translate("Change Queue") | html %]">[% Translate("Queue") | html %]</a>
                            </li>
[% RenderBlockEnd("MoveForm") %]
                        </ul>
                        <div class="Clear"></div>
                    </div>
                </div>
            </div>

[% RenderBlockStart("ProcessWidget") %]
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
var WidgetWidth   = parseInt($('#DynamicFieldsWidget').innerWidth() - 15, 10),
    FieldsPerRow  = 4,
    FieldMargin   = parseInt($('.DynamicFieldAutoResize').css('margin-right'), 10) + 2,
    FieldWidth    = 0;

// define amount of fields per row depending on display resolution
if ( WidgetWidth < 1000 ) {
    FieldsPerRow = 3;
}
if ( WidgetWidth < 600 ) {
    FieldsPerRow = 2;
}
if ( WidgetWidth < 400 ) {
    FieldsPerRow = 1;
}

// determine the needed field width and resize the fields
FieldWidth = parseInt(WidgetWidth / FieldsPerRow - FieldMargin - 1, 10);
$('.DynamicFieldAutoResize').width(FieldWidth);

$('.ShowFieldInfoOverlay').bind('click', function() {

    var OverlayTitle  = $(this).closest('label').attr('title'),
        OverlayHTML   = $(this).closest('.FieldContainer').find('.Value').html();

    OverlayHTML = '<div class="FieldOverlay">' + OverlayHTML + '</div>';

    Core.UI.Dialog.ShowDialog({
        Modal: true,
        Title: OverlayTitle,
        HTML: OverlayHTML,
        PositionTop: '100px',
        PositionLeft: 'Center',
        CloseOnEscape: true,
        Buttons: [
            {
                Type: 'Close',
                Label: [% Translate("Close") | JSON %],
                Function: function() {
                    Core.UI.Dialog.CloseDialog($('.Dialog:visible'));
                    Core.Form.EnableForm($('form[name="compose"]'));
                    return false;
                }
            }
        ]
    });
});
//]]></script>
[% END %]
            <div class="WidgetSimple Expanded" id="DynamicFieldsWidget">
                <div class="Header">
                    <div class="WidgetAction Toggle"><a href="#" title="[% Translate("Show or hide the content") | html %]"><i class="fa fa-caret-right"></i><i class="fa fa-caret-down"></i></a></div>
                    <h2>[% Translate(Data.WidgetTitle) | html %]</h2>
                </div>
[% RenderBlockStart("NextActivityDialogs") %]
                <div class="LightRow Bottom">
                    <ul class="Actions">
                        <li><strong>[% Data.ActivityName | html %] [% Translate("Dialogs") | html %]:</strong></li>
[% RenderBlockStart("ActivityDialog") %]
                        <li>
                            <a title="[% Data.Name | html %]" class="AsPopup PopupType_TicketAction" href="[% Env("Baselink") %]Action=AgentTicketProcess;Subaction=DisplayActivityDialog;TicketID=[% Data.TicketID | uri %];ProcessEntityID=[% Data.ProcessEntityID | uri %];ActivityDialogEntityID=[% Data.ActivityDialogEntityID | uri %]">[% Data.Name | html %]</a>
                        </li>
[% RenderBlockEnd("ActivityDialog") %]
                    </ul>
[% RenderBlockStart("NoActivityDialogs") %]
                    <span class="ActionMessage">[% Translate("There are no dialogs available at this point in the process.") | html %]</span>
[% RenderBlockEnd("NoActivityDialogs") %]
                    <div class="Clear"></div>
                </div>
[% RenderBlockEnd("NextActivityDialogs") %]
                <div class="Content ProcessInfo">
                    <div class="ProcessInformation">
                        <fieldset>
[% RenderBlockStart("ProcessWidgetDynamicFieldGroups") %]
[% RenderBlockStart("ProcessWidgetDynamicFieldGroupSeparator") %]
                            <h2 class="FieldSetSeparator">[% Data.Name %]</h2>
[% RenderBlockEnd("ProcessWidgetDynamicFieldGroupSeparator") %]
[% RenderBlockStart("ProcessWidgetDynamicField") %]
                            <div class="FieldContainer DynamicFieldAutoResize">
                                <label title="[% Data.Label | html %]">
                                    [% Data.Label | html %]
[% RenderBlockStart("ProcessWidgetDynamicFieldValueOverlayTrigger") %]
                                    <a href="#" class="ShowFieldInfoOverlay">+</a>
[% RenderBlockEnd("ProcessWidgetDynamicFieldValueOverlayTrigger") %]
                                </label>
                                <p class="Value CutValue DynamicField_[% Data.Name %]">
<!-- OutputFilterHook_WidgetDynamicFieldBegin -->
[% RenderBlockStart("ProcessWidgetDynamicFieldLink") %]
                                    <span title="[% Data.Title | html %]"><a href="[% Data.Link %]" target="_blank" class="DynamicFieldLink">[% Data.Value %]</a></span>
[% RenderBlockEnd("ProcessWidgetDynamicFieldLink") %]
[% RenderBlockStart("ProcessWidgetDynamicFieldPlain") %]
                                    [% Data.Value %]
[% RenderBlockEnd("ProcessWidgetDynamicFieldPlain") %]
<!-- OutputFilterHook_WidgetDynamicFieldEnd -->
                                </p>
                                <p class="ValueLong">
[% RenderBlockStart("ProcessWidgetDynamicFieldValueLong") %]
                                    [% Data.Value %]
[% RenderBlockEnd("ProcessWidgetDynamicFieldValueLong") %]
                                </p>
                                <div class="Clear"></div>
                            </div>
[% RenderBlockEnd("ProcessWidgetDynamicField") %]
[% RenderBlockEnd("ProcessWidgetDynamicFieldGroups") %]
                        </fieldset>
                    </div>
                </div>
            </div>
[% RenderBlockEnd("ProcessWidget") %]

            <div id="ArticleTree">
[% Data.ArticleTree %]
            </div>

[% RenderBlockStart("HintNoArticles") %]
            <div class="WidgetSimple">
                <div class="Content">
                    [% Translate("This item has no articles yet.") | html %]
                </div>
            </div>
[% RenderBlockEnd("HintNoArticles") %]

            <div id="ArticleItems">
[% Data.ArticleItems %]
            </div>

[% RenderBlockStart("LinkTableComplex") %]
            [% Data.LinkTableStrg %]
[% RenderBlockEnd("LinkTableComplex") %]

        </div>
        <div class="Clear"></div>
    </div>

</div>
[% RenderBlockEnd("Header") %]

[% RenderBlockStart("Tree") %]
<div class="WidgetSimple">
    <div class="Header">
        <div class="WidgetAction Toggle">
            <a href="#" title="[% Translate("Show or hide the content") | html %]">
                <i class="fa fa-caret-right"></i>
                <i class="fa fa-caret-down"></i>
            </a>
        </div>
        <h2>[% Translate("Article Overview") | html %] - [% Data.ArticleCount | html %] [% Translate("Article(s)") | html %]</h2>
        <div class="AdditionalInformation ControlRow">

[% RenderBlockStart("ArticlePages") %]
            <div class="ArticlePages Icons">
        [% FOREACH page IN [1 .. Data.Pages]; %]
                <a href="[% Env("Baselink") %]Action=AgentTicketZoom;TicketID=[% Data.TicketID | uri %];ArticlePage=[% page %]" title="[% Translate('Page') %] [% page %]" data-page="[% page %]" [% IF page == Data.CurrentPage %]class="Active"[% END %]>[% page %]</a>
        [% END; %]
            </div>
[% RenderBlockEnd("ArticlePages") %]
[% RenderBlockStart("ArticleFilterDialogLink") %]
            <div class="ArticleFilter Icons">
                <span class="InvisibleText">[% Translate("Article Filter") | html %]:</span>
# Only show one: Set or Reset.
#[% RenderBlockStart("ArticleFilterSetLink") %]
                <a href="#" id="SetArticleFilter" title="[% Translate("Add Filter") | html %]"><i class="fa fa-filter"></i><span>[% Translate("Set") | html %]</span></a>
#[% RenderBlockEnd("ArticleFilterSetLink") %]
[% RenderBlockStart("ArticleFilterResetLink") %]
                <a href="#" id="ResetArticleFilter" title="[% Translate("Reset Filter") | html %]"><i class="fa fa-trash-o"></i><span>[% Translate("Reset") | html %]</span></a>
[% RenderBlockEnd("ArticleFilterResetLink") %]
            </div>
[% RenderBlockEnd("ArticleFilterDialogLink") %]
            <div class="ArticleView Icons">
                <span class="InvisibleText">[% Translate("Article") | html %] [% Translate("View") | html %]:</span>
[% RenderBlockStart("Expand") %]
                <a class="OneArticle Active" href="[% Env("Baselink") %]Action=AgentTicketZoom;TicketID=[% Data.TicketID | uri %];ArticleID=[% Data.ArticleID | uri %];ZoomExpand=0;ArticlePage=[% Data.Page | uri %]" title="[% Translate("Show one article") | html %]"><i class="fa fa-minus"></i><span>[% Translate("Show one article") | html %]</span></a>
                <a class="AllArticles" href="[% Env("Baselink") %]Action=AgentTicketZoom;TicketID=[% Data.TicketID | uri %];ArticleID=[% Data.ArticleID | uri %];ZoomExpand=1;ArticlePage=[% Data.Page | uri %]" title="[% Translate("Show all articles") | html %]"><i class="fa fa-bars"></i><span>[% Translate("Show all articles") | html %]</span></a>
[% RenderBlockEnd("Expand") %]
[% RenderBlockStart("Collapse") %]
                <a class="OneArticle" href="[% Env("Baselink") %]Action=AgentTicketZoom;TicketID=[% Data.TicketID | uri %];ArticleID=[% Data.ArticleID | uri %];ZoomExpand=0" title="[% Translate("Show one article") | html %]"><i class="fa fa-minus"></i><span>[% Translate("Show one article") | html %]</span></a>
                <a class="AllArticles Active" href="[% Env("Baselink") %]Action=AgentTicketZoom;TicketID=[% Data.TicketID | uri %];ArticleID=[% Data.ArticleID | uri %];ZoomExpand=1" title="[% Translate("Show all articles") | html %]"><i class="fa fa-bars"></i><span>[% Translate("Show all articles") | html %]</span></a>
[% RenderBlockEnd("Collapse") %]
            </div>
            <div class="Clear"></div>
        </div>
    </div>
    <div class="Content">
        <div class="TicketList">
            <div id="ArticleTableBody" class="ActionRow">
                <div class="Scroller">
                    <table id="ArticleTable" class="DataTable [% Data.TableClasses | html %]">
                        <thead>
                            <tr>
                                <th class="UnreadArticles">
                                    <a class="UnreadArticles" href="#" title="[% Translate("Unread articles") | html %]">
                                        <span class="UnreadArticles">
                                            <i class="fa fa-star"></i>
                                            <i class="fa fa-star"></i>
                                        </span>
                                    </a>
                                </th>
                                <th class="No Sortable"><a href="#">[% Translate("No.") | html %]</a></th>
                                <th class="Type Sortable"><a href="#">[% Translate("Type") | html %]</a></th>
                                <th class="Direction Sortable"><a href="#" title="[% Translate("Direction") | html %]"><span class="Direction"><!--Direction--></span></a></th>
                                <th class="From Sortable"><a href="#">[% Translate("From") | html %]</a></th>
                                <th class="Subject Sortable"><a href="#">[% Translate("Subject") | html %]</a></th>
                                <th class="Created Sortable"><a href="#">[% Translate("Created") | html %]</a></th>
                                <th class="Attachments Last">
                                    <a href="#" title="[% Translate("Attachments") | html %]">
                                        <i class="fa fa-paperclip"></i>
                                    </a>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
[% RenderBlockStart("TreeItem") %]
                            <tr class="[% Data.SenderType | html %]-[% Data.ArticleType | html %] [% Data.ClassRow | html %]" id="Row[% Data.Count | uri %]">
                                <td class="[% Data.Class | html %] UnreadArticles Fixed NonTextContent">
[% RenderBlockStart("TreeItemImportantArticle") %]
                                    <span class="ImportantArticles" title="[% Translate("Important") | html %]">
                                        <i class="fa fa-info-circle"></i>
                                        <em>[% Translate("Important") | html %]</em>
                                    </span>
[% RenderBlockEnd("TreeItemImportantArticle") %]
[% RenderBlockStart("TreeItemNewArticle") %]
                                    <span class="[% Data.Class | html %]" title="[% Translate("Unread Article!") | html %]">
                                        <i class="fa fa-star"></i>
                                        <i class="fa fa-star"></i>
                                    </span>
[% RenderBlockEnd("TreeItemNewArticle") %]
[% RenderBlockStart("TreeItemNoNewArticle") %]
                                    <span class="NoContent"></span>
[% RenderBlockEnd("TreeItemNoNewArticle") %]
                                </td>
                                <td class="No">
                            [% Data.Count | html %]
                                    <input type="hidden" class="ArticleInfo" name="Link[% Data.Count | uri %]" value="[% Env("Baselink") %]Action=AgentTicketZoom;Subaction=ArticleUpdate;Count=[% Data.Count | uri %];TicketID=[% Data.TicketID | html %];ArticleID=[% Data.ArticleID | html %];"/>
                                    <input type="hidden" class="ArticleID" value="[% Data.ArticleID | html %]" />
                                    <input type="hidden" class="SortData" value="[% Data.Count | html %]" />
                                </td>
                                <td class="Type">
                                    <div>[% Translate(Data.SenderType) | html %] &ndash; [% Translate(Data.ArticleType) | html %]</div>
                                    <input type="hidden" class="SortData" value="[% Translate(Data.SenderType) | html %] &ndash; [% Translate(Data.ArticleType) | html %]" />
                                </td>
                                <td class="Direction">
[% RenderBlockStart("TreeItemDirectionIncoming") %]
                                    <span class="Direction Incoming" title="[% Translate("Incoming message") | html %]"></span>
                                    <input type="hidden" class="SortData" value="0" />
[% RenderBlockEnd("TreeItemDirectionIncoming") %]
[% RenderBlockStart("TreeItemDirectionOutgoing") %]
                                    <span class="Direction Outgoing" title="[% Translate("Outgoing message") | html %]"></span>
                                    <input type="hidden" class="SortData" value="1" />
[% RenderBlockEnd("TreeItemDirectionOutgoing") %]
[% RenderBlockStart("TreeItemDirectionInternal") %]
                                    <span class="Direction Internal" title="[% Translate("Internal message") | html %]"></span>
                                    <input type="hidden" class="SortData" value="2" />
[% RenderBlockEnd("TreeItemDirectionInternal") %]
                                </td>
                                <td class="From">
                                    <div title="[% Data.From | html %]"><a href="#">[% Data.FromRealname | truncate(34) | html %]</a></div>
                                    <input type="hidden" class="SortData" value="[% Data.From | html %]" />
                                </td>
                                <td class="Subject">
                                    <div title="[% Data.Subject | html %]"><a href="#">[% Data.Subject | truncate(36) | html %]</a></div>
                                    <input type="hidden" class="SortData" value="[% Data.Subject | html %]" />
                                </td>
                                <td class="Created">
                                    <a href="#">[% Data.Created | Localize("TimeShort") %]</a>
# Include custom sorting information: date in ISO format.
# Other date formats cannot be sorted reliably.
                                    <input type="hidden" class="SortData" value="[% Data.Created | html %]" />
                                </td>
                                <td class="Attachments Attachment Fixed NonTextContent">
[% RenderBlockStart("TreeItemAttachment") %]
[% RenderBlockStart("TreeItemAttachmentIconSingle") %]
# show attachment preview data in tooltip
                                    <a class="Attachment" title="[% Translate("Attachment") | html %] [% Data.Filename | html %] ([% Data.Filesize | html %])" rel="TicketAttachment[% Data.Count | html %]">
                                        <i class="fa fa-file-o"></i>
                                    </a>
[% RenderBlockEnd("TreeItemAttachmentIconSingle") %]
[% RenderBlockStart("TreeItemAttachmentIconMultiple") %]
# no preview data in tooltip
                                    <a class="Attachment" title="[% Translate("Attachments") | html %]" rel="TicketAttachment[% Data.Count | html %]">
                                        <i class="fa fa-file-o"></i>
                                    </a>
[% RenderBlockEnd("TreeItemAttachmentIconMultiple") %]
                                    <div id="TicketAttachment[% Data.Count | html %]" class="AttachmentData Hidden">
                                        <div class="Attachment InnerContent">
[% RenderBlockStart("TreeItemAttachmentItem") %]
                                            <div class="AttachmentElement">
                                                <h3>
# Bugfix for bug#5579 - Spaces in filenames are converted to + characters when downloading in IE.
# Filename must be escaped with "| html", not "| uri".
                                                    <a href="[% Env("Baselink") %]Action=AgentTicketAttachment;ArticleID=[% Data.ArticleID | uri %];FileID=[% Data.FileID | uri %]" [% Data.Target %]>[% Data.Filename | html %]</a>
                                                </h3>
                                                <p>[% Data.Filesize | html %]</p>
                                            </div>
[% RenderBlockEnd("TreeItemAttachmentItem") %]
                                        </div>
                                    </div>
[% RenderBlockEnd("TreeItemAttachment") %]
[% RenderBlockStart("TreeItemNoAttachment") %]
                                    <span class="NoContent"></span>
[% RenderBlockEnd("TreeItemNoAttachment") %]
                                </td>
                            </tr>
[% RenderBlockEnd("TreeItem") %]
                        </tbody>
                    </table>
                </div>
                <div class="Handle ui-resizable-handle ui-resizable-s">
                    <a href="#">[% Translate("Resize") | html %]</a>
                </div>
            </div>
        </div>
    </div>
</div>
[% RenderBlockEnd("Tree") %]

[% RenderBlockStart("ArticleItem") %]
<div>
    <a name="Article[% Data.ArticleID | html %]"></a>
    <div class="WidgetSimple Expanded">
        <div class="Header">
            <div class="WidgetAction Toggle">
                <a href="[% Env("Baselink") %]Action=AgentTicketZoom;TicketID=[% Data.TicketID | uri %];ArticleID=[% Data.ArticleID | uri %]" title="[% Translate("Show or hide the content") | html %]"><i class="fa fa-caret-right"></i><i class="fa fa-caret-down"></i></a>
            </div>
            <h2>[% Translate("Article") | html %] #[% Data.Count | html %] &ndash; [% Data.Subject | html %]</h2>
            <div class="AdditionalInformation SpacingLoader">
                [% Translate("Created") | html %]: [% Data.Created | Localize("TimeShort") %]
[% RenderBlockStart("ArticleCreatedBy") %]
                [% Translate("by") | html %] [% Data.CreatedByUser | html %]
[% RenderBlockEnd("ArticleCreatedBy") %]
            </div>
        </div>
        <div class="LightRow Bottom">
            <ul class="Actions">

[% RenderBlockStart("ArticleForwardAsDropdown") %]
                <li>
                    <form title="[% Translate(Data.Name) | html %]" action="[% Env("CGIHandle") %]" method="get" id="[% Data.FormID | html %]">
                        <input type="hidden" name="Action" value="[% Data.Action | html %]"/>
                        <input type="hidden" name="TicketID" value="[% Data.TicketID | html %]"/>
                        <input type="hidden" name="ArticleID" value="[% Data.ArticleID | html %]"/>
                        <input type="hidden" name="ForwardAll" value="[% Data.ForwardAll | html %]"/>
                        <label for="[% Data.ForwardElementID | html %]" class="InvisibleText">[% Translate(Data.Name) | html %]:</label>
                        [% Data.StandarForwardsStrg %]
                    </form>
[% RenderBlockStart("ArticleForwardAsDropdownJSOnLoad") %]
<script type="text/javascript">//<![CDATA[
$('#[% Data.FormID | html %] select[name=ForwardTemplateID]').bind('change', function (Event) {
    var URL;

    if ($(this).val() > 0) {
        URL = Core.Config.Get('Baselink') + $(this).parents().serialize();
        Core.UI.Popup.OpenPopup(URL, 'TicketAction');
        // reset the select box so that it can be used again from the same window
        $(this).val('0');
    }
});
//]]></script>
[% RenderBlockEnd("ArticleForwardAsDropdownJSOnLoad") %]
[% RenderBlockStart("ArticleForwardAsDropdownJSStatic") %]
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
$('#[% Data.FormID | html %] select[name=ForwardTemplateID]').bind('change', function (Event) {
    var URL;

    if ($(this).val() > 0) {
        URL = Core.Config.Get('Baselink') + $(this).parents().serialize();
        Core.UI.Popup.OpenPopup(URL, 'TicketAction');
        // reset the select box so that it can be used again from the same window
        $(this).val('0');
    }
});
//]]></script>
[% END %]
[% RenderBlockEnd("ArticleForwardAsDropdownJSStatic") %]
                </li>
[% RenderBlockEnd("ArticleForwardAsDropdown") %]

[% RenderBlockStart("ArticleMenu") %]
                <li>
                    <a href="[% Env("Baselink") %][% Data.Link %]" class="[% Data.Class | html %]" [% Data.LinkParam %] title="[% Translate(Data.Description) | html %]">[% Translate(Data.Name) | html %]</a>
                </li>
[% RenderBlockEnd("ArticleMenu") %]

[% RenderBlockStart("ArticleReplyAsDropdown") %]
                <li>
                    <form title="[% Translate(Data.Name) | html %]" action="[% Env("CGIHandle") %]" method="get" id="[% Data.FormID | html %]">
                        <input type="hidden" name="Action" value="[% Data.Action | html %]"/>
                        <input type="hidden" name="TicketID" value="[% Data.TicketID | html %]"/>
                        <input type="hidden" name="ArticleID" value="[% Data.ArticleID | html %]"/>
                        <input type="hidden" name="ReplyAll" value="[% Data.ReplyAll | html %]"/>
                        <label for="[% Data.ResponseElementID | html %]" class="InvisibleText">[% Translate(Data.Name) | html %]:</label>
                        [% Data.StandardResponsesStrg %]
                    </form>
[% RenderBlockStart("ArticleReplyAsDropdownJSOnLoad") %]
<script type="text/javascript">//<![CDATA[
$('#[% Data.FormID | html %] select[name=ResponseID]').bind('change', function (Event) {
    var URL;

    if ($(this).val() > 0) {
        URL = Core.Config.Get('Baselink') + $(this).parents().serialize();
        window.setTimeout(function() {
            Core.UI.Popup.OpenPopup(URL, 'TicketAction');
        }, 0);
        // reset the select box so that it can be used again from the same window
        $(this).val('0');
    }
});
//]]></script>
[% RenderBlockEnd("ArticleReplyAsDropdownJSOnLoad") %]
[% RenderBlockStart("ArticleReplyAsDropdownJSStatic") %]
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
$('#[% Data.FormID | html %] select[name=ResponseID]').bind('change', function (Event) {
    var URL;

    if ($(this).val() > 0) {
        URL = Core.Config.Get('Baselink') + $(this).parents().serialize();
        window.setTimeout(function() {
            Core.UI.Popup.OpenPopup(URL, 'TicketAction');
        }, 0);
        // reset the select box so that it can be used again from the same window
        $(this).val('0');
    }
});
//]]></script>
[% END %]
[% RenderBlockEnd("ArticleReplyAsDropdownJSStatic") %]
                </li>
[% RenderBlockEnd("ArticleReplyAsDropdown") %]
            </ul>
            <div class="ClearLeft"></div>
        </div>

        <div class="Content">
            <div class="ArticleMailHeader">
                <fieldset class="TableLike FixedLabelSmall">
[% RenderBlockStart("RowRecipient") %]
                    <label>[% Translate(Data.Key) | html %]:</label>
                    <p class="Value" title="[% Data.Value | html %]">[% Data.Realname | html %]</p>
                    <div class="Clear"></div>
[% RenderBlockEnd("RowRecipient") %]
[% RenderBlockStart("RowData") %]
                    <label>[% Translate(Data.Key) | html %]:</label>
                    <p class="Value" title="[% Data.Value | html %]">[% Data.Value | html %]</p>
                    <div class="Clear"></div>
[% RenderBlockEnd("RowData") %]

# show article dynamic fields
[% RenderBlockStart("ArticleDynamicField") %]
                    <label>[% Translate(Data.Label) | html %]:</label>
[% RenderBlockStart("ArticleDynamicFieldLink") %]
                    <p class="Value" title="[% Data.Title | html %]"><a href="[% Data.Link %]" target="_blank" class="DynamicFieldLink">[% Data.Value %]</a></p>
[% RenderBlockEnd("ArticleDynamicFieldLink") %]
[% RenderBlockStart("ArticleDynamicFieldPlain") %]
                    <p class="Value" title="[% Data.Title | html %]">[% Data.Value %]</p>
[% RenderBlockEnd("ArticleDynamicFieldPlain") %]
                    <div class="Clear"></div>
[% RenderBlockEnd("ArticleDynamicField") %]

# example of how to use fixed dynamic field blocks for customizations
# Note: Field1 and Field2 are the names of the fields and had to be replaced with the actual
# field names
#[% RenderBlockStart("ArticleDynamicFieldField1") %]
#                        <label>[% Translate(Data.Label) | html %]:</label>
#[% RenderBlockStart("ArticleDynamicFieldField1Link") %]
#                    <p class="Value" title="[% Data.Title | html %]"><a href="[% Data.Link %]" target="_blank" class="DynamicFieldLink">[% Data.Value %]</a></p>
#[% RenderBlockEnd("ArticleDynamicField1Link") %]
#[% RenderBlockStart("ArticleDynamicFieldField1Plain") %]
#                    <p class="Value" title="[% Data.Title | html %]">[% Data.Value %]</p>
#[% RenderBlockEnd("ArticleDynamicFieldField1Plain") %]
#                        <div class="Clear"></div>
#[% RenderBlockEnd("ArticleDynamicFieldField1") %]
#[% RenderBlockStart("ArticleDynamicFieldField2") %]
#                        <label>[% Translate(Data.Label) | html %]:</label>
#[% RenderBlockStart("ArticleDynamicFieldField2Link") %]
#                    <p class="Value" title="[% Data.Title | html %]"><a href="[% Data.Link %]" target="_blank" class="DynamicFieldLink">[% Data.Value %]</a></p>
#[% RenderBlockEnd("ArticleDynamicFieldField2Link") %]
#[% RenderBlockStart("ArticleDynamicFieldField2Plain") %]
#                    <p class="Value" title="[% Data.Title | html %]">[% Data.Value %]</p>
#[% RenderBlockEnd("ArticleDynamicFieldField2Plain") %]
#                        <div class="Clear"></div>
#[% RenderBlockEnd("ArticleDynamicFieldField2") %]

# show article options like signed, crypted, ...
[% RenderBlockStart("ArticleOption") %]
                    <label>[% Translate(Data.Key) | html %]:</label>
                    <div title="[% Data.Value | html %]" class="[% Data.Result | html %] Value">[% Data.Value | html %]</div>
                    <div class="Clear"></div>
[% RenderBlockEnd("ArticleOption") %]

#                    <!-- Include the full subject so that it can be copied. The one in the title bar is shortened. -->
                    <label>[% Translate("Subject") | html %]:</label>
                    <p class="Value">[% Data.Subject | html %]</p>
                    <div class="Clear"></div>

# show article accounted time
[% RenderBlockStart("ArticleAccountedTime") %]
                    <label>[% Translate(Data.Key) | html %]:</label>
                    <p class="Value">[% Data.Value | html %]</p>
                    <div class="Clear"></div>
[% RenderBlockEnd("ArticleAccountedTime") %]

# show attachments
[% RenderBlockStart("ArticleAttachment") %]
                    <label>[% Translate("Attachment") | html %]:</label>
                    <p class="Value">
[% RenderBlockStart("ArticleAttachmentRow") %]
[% RenderBlockStart("ArticleAttachmentRowLink") %]
                        <a class="[% Data.Class | html %]" href="[% Data.Link %]" [% Data.Target %] title="[% Translate(Data.Action) | html %]">[% Data.Filename | html %]</a> [% Data.DataFileSize | html %]
[% RenderBlockEnd("ArticleAttachmentRowLink") %]
[% RenderBlockStart("ArticleAttachmentRowNoLink") %]
                        [% Data.Filename | html %], [% Data.Filesize | html %]
[% RenderBlockEnd("ArticleAttachmentRowNoLink") %]
                        <br />
[% RenderBlockEnd("ArticleAttachmentRow") %]
                    </p>
                    <div class="Clear"></div>
[% RenderBlockEnd("ArticleAttachment") %]
                </fieldset>
            </div>
            <div class="ArticleMailContent">
[% RenderBlockStart("BodyPlain") %]
[% Data.BodyNote %]
                <div class="ArticleBody">
[% Data.Body %]
                </div>
[% RenderBlockEnd("BodyPlain") %]
[% RenderBlockStart("BodyHTML") %]
                <div>
# execute IFrame JS asynchronously. Otherwise it could happen before our API was loaded
# Use the HTML5 sandbox attribute to prevent plugins and scripts from being executed in the browser.
# Use IE's (non-standard) security attribute to achieve something similar in older IE browsers. Append session info to URL because IE will not send cookies.
# Set 'allow-popups' to allow IE10+ to open links. ref: http://www.w3.org/html/wg/wiki/ChangeProposals/sandbox_allow_popups
                    <iframe sandbox="allow-same-origin allow-popups" [% Data.MSSecurityRestricted %] width="100%" frameborder="0" id="Iframe[% Data.ArticleID | html %]" onload="window.setTimeout( function (){ if (typeof Core === 'object' && typeof Core.Agent === 'object' && typeof Core.Agent.TicketZoom === 'object') { Core.Agent.TicketZoom.IframeAutoHeight($('#Iframe[% Data.ArticleID | html %]')); } }, 500);" src="[% Env("Baselink") %]Action=AgentTicketAttachment;Subaction=HTMLView;ArticleID=[% Data.ArticleID | html %];FileID=[% Data.AttachmentIDOfHTMLBody | html %];[% Env("SessionName") | html %]=[% Env("SessionID") | html %]"></iframe>
                </div>
[% RenderBlockEnd("BodyHTML") %]
            </div>
        </div>
    </div>
</div>
[% RenderBlockStart("ArticleItemMarkAsSeen") %]
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
    Core.Agent.TicketZoom.MarkAsSeen([% Data.TicketID | html %], [% Data.ArticleID | html %]);
//]]></script>
[% END %]
[% RenderBlockEnd("ArticleItemMarkAsSeen") %]
[% RenderBlockEnd("ArticleItem") %]

[% RenderBlockStart("TicketItemMarkAsSeen") %]
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
    Core.Agent.TicketZoom.MarkTicketAsSeen([% Data.TicketID | html %]);
//]]></script>
[% END %]
[% RenderBlockEnd("TicketItemMarkAsSeen") %]

[% RenderBlockStart("TicketZoomInit") %]
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
    Core.Agent.TicketZoom.Init({ ArticleTableHeight: parseInt('[% Env("UserTicketZoomArticleTableHeight") %]', 10)});
    Core.Config.Set('Ticket::Frontend::HTMLArticleHeightDefault', parseInt("[% Config("Ticket::Frontend::HTMLArticleHeightDefault") %]" || 0, 10));
    Core.Config.Set('Ticket::Frontend::HTMLArticleHeightMax', parseInt("[% Config("Ticket::Frontend::HTMLArticleHeightMax") %]" || 0, 10));
//]]></script>
[% END %]
[% RenderBlockEnd("TicketZoomInit") %]
